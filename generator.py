import csv
import random
import string
import numpy as np
from datetime import datetime, timedelta

# Списки для генерации случайных данных
male_first_names = [
    "Александр", "Дмитрий", "Сергей", "Андрей", "Алексей", "Михаил", "Иван", "Николай",
    "Владимир", "Павел", "Артём", "Роман", "Денис", "Евгений", "Виктор", "Игорь",
    "Юрий", "Олег", "Константин", "Антон", "Максим", "Леонид", "Василий", "Григорий",
    "Валерий", "Станислав", "Георгий", "Борис", "Владислав", "Вячеслав", "Фёдор", "Эдуард",
    "Аркадий", "Тимофей", "Ярослав", "Кирилл", "Герман", "Ростислав", "Семён", "Артёмий",
    "Матвей", "Глеб", "Захар", "Данил", "Викентий", "Лев", "Никита", "Егор", "Марк", 
    "Савелий", "Пётр", "Виталий", "Юлиан", "Тихон", "Платон", "Даниил", "Давид", "Филипп", 
    "Арсений", "Родион", "Геннадий", "Марат", "Рустам", "Светозар", "Ян", "Ратибор", 
    "Серафим", "Альберт", "Тарас", "Тимур", "Вениамин", "Лука", "Анатолий", "Эльдар", 
    "Всеволод", "Святослав", "Игнатий", "Руслан", "Богдан", "Сильвестр", "Альфред", 
    "Леонтий", "Гордей", "Елисей", "Клим", "Ладислав", "Мирослав", "Гавриил", "Эмиль", 
    "Трофим", "Юлий", "Артемий", "Адам", "Ефим", "Адриан", "Август", "Арнольд", 
    "Бронислав", "Гордей", "Демид", "Евграф"
]
male_last_names = [
    "Иванов", "Смирнов", "Кузнецов", "Попов", "Васильев", "Петров", "Соколов", "Михайлов",
    "Новиков", "Федоров", "Морозов", "Волков", "Алексеев", "Лебедев", "Семенов", "Егоров",
    "Павлов", "Козлов", "Степанов", "Николаев", "Орлов", "Андреев", "Макаров", "Никитин",
    "Захаров", "Зайцев", "Соловьев", "Борисов", "Яковлев", "Григорьев", "Романов", "Воробьев",
    "Сергеев", "Кузьмин", "Фролов", "Александров", "Дмитриев", "Королев", "Гусев", "Киселев",
    "Ильин", "Максимов", "Поляков", "Сорокин", "Виноградов", "Ковалев", "Белов", "Медведев",
    "Антонов", "Тарасов", "Жуков", "Баранов", "Филиппов", "Комаров", "Давыдов", "Беляев",
    "Герасимов", "Богданов", "Осипов", "Сидоров", "Матвеев", "Титов", "Марков", "Миронов",
    "Крылов", "Куликов", "Карпов", "Власов", "Мельников", "Денисов", "Гаврилов", "Тихомиров",
    "Казаков", "Афанасьев", "Данилов", "Савельев", "Тимофеев", "Фомин", "Чернов", "Абрамов",
    "Мартынов", "Ефимов", "Федотов", "Щербаков", "Назаров", "Калинин", "Исаев", "Чернышев",
    "Быков", "Маслов", "Родионов", "Коновалов", "Лазарев", "Воронин", "Климов", "Филатов",
    "Пономарев", "Голубев", "Покровский", "Майоров"
]
female_first_names = [
    "Александра", "Алина", "Алла", "Анастасия", "Анна", "Арина", "Валентина", "Валерия",
    "Варвара", "Василиса", "Вера", "Вероника", "Виктория", "Галина", "Дарья", "Диана",
    "Евгения", "Екатерина", "Елена", "Елизавета", "Жанна", "Зинаида", "Зоя", "Инна",
    "Ирина", "Карина", "Кира", "Ксения", "Лариса", "Лидия", "Лилия", "Любовь", "Людмила",
    "Маргарита", "Марина", "Мария", "Мирослава", "Надежда", "Наталья", "Нина", "Нонна",
    "Оксана", "Олеся", "Ольга", "Полина", "Раиса", "Регина", "Римма", "Светлана", "София",
    "Тамара", "Татьяна", "Ульяна", "Юлия", "Яна", "Августа", "Агата", "Агнесса", "Ада",
    "Алевтина", "Альбина", "Амелия", "Анжела", "Анжелика", "Антонина", "Ариадна", "Аэлита",
    "Божена", "Варя", "Виолетта", "Галина", "Глафира", "Дана", "Ева", "Евдокия", "Елизарова",
    "Ефросинья", "Жанна", "Злата", "Изабелла", "Илона", "Ия", "Капитолина", "Клавдия",
    "Клара", "Лада", "Леокадия", "Лиана", "Лилия", "Любава", "Майя", "Милана", "Надежда",
    "Ника", "Нинель", "Пелагея", "Радмила", "Ростислава", "Серафима", "Таисия", "Юлиана"
]
female_last_names = [
    "Иванова", "Смирнова", "Кузнецова", "Попова", "Васильева", "Петрова", "Соколова", "Михайлова",
    "Новикова", "Федорова", "Морозова", "Волкова", "Алексеева", "Лебедева", "Семенова", "Егорова",
    "Павлова", "Козлова", "Степанова", "Николаева", "Орлова", "Андреева", "Макарова", "Никитина",
    "Захарова", "Зайцева", "Соловьева", "Борисова", "Яковлева", "Григорьева", "Романова", "Воробьева",
    "Сергеева", "Кузьмина", "Фролова", "Александрова", "Дмитриева", "Королева", "Гусева", "Киселева",
    "Ильина", "Максимова", "Полякова", "Сорокина", "Виноградова", "Ковалева", "Белова", "Медведева",
    "Антонова", "Тарасова", "Жукова", "Баранова", "Филиппова", "Комарова", "Давыдова", "Беляева",
    "Герасимова", "Богданова", "Осипова", "Сидорова", "Матвеева", "Титова", "Маркова", "Миронова",
    "Крылова", "Куликова", "Карпова", "Власова", "Мельникова", "Денисова", "Гаврилова", "Тихомирова",
    "Казакова", "Афанасьева", "Данилова", "Савельева", "Тимофеева", "Фомина", "Чернова", "Абрамова",
    "Мартынова", "Ефимова", "Федотова", "Щербакова", "Назарова", "Калинина", "Исаева", "Чернышева",
    "Быкова", "Маслова", "Родионова", "Коновалова", "Лазарева", "Воронина", "Климова", "Филатова",
    "Пономарева", "Голубева", "Покровская", "Майорова", "Прохорова", "Добрынина", "Лукина", "Селезнева"
]

genders = ['М', 'Ж']

purchase_types = [
    'Винотеки', 'Одежда', 'Бытовая техника', 'Рестораны', 'Транспорт', 'Развлечения',
    'Кафе', 'Мебель', 'Косметика', 'Медикаменты', 'Строительные материалы', 'Книги',
    'Игрушки', 'Электроника', 'Спортивные товары', 'Аксессуары', 'Обувь', 'Канцтовары',
    'Сувениры', 'Цветы', 'Автозапчасти', 'Автомобильные услуги', 'Аптека', 'Товары для дома',
    'Зоотовары', 'Ювелирные изделия', 'Салоны красоты', 'Туристические услуги', 'Гостиницы',
    'Супермаркеты', 'Хозяйственные товары', 'Компьютеры и периферия', 'Игры и ПО', 'Музыкальные инструменты',
    'Фототовары', 'Билеты на мероприятия', 'Страхование', 'Фитнес-клубы', 'Образование', 'Парфюмерия',
    'Бытовая химия', 'Автомойка', 'Аренда автомобилей', 'Почтовые услуги', 'Доставка еды', 'Сантехника',
    'Телекоммуникации', 'Офисное оборудование', 'Детские товары', 'Продукты'
]

cities = [
    "Москва", "Санкт-Петербург", "Новосибирск", "Екатеринбург", "Казань", "Нижний Новгород",
    "Челябинск", "Самара", "Омск", "Ростов-на-Дону", "Уфа", "Красноярск", "Воронеж",
    "Пермь", "Волгоград", "Краснодар", "Саратов", "Тюмень", "Тольятти", "Ижевск", 
    "Барнаул", "Ульяновск", "Иркутск", "Владивосток", "Ярославль", "Махачкала", 
    "Томск", "Оренбург", "Кемерово", "Новокузнецк"
]

# Функция для генерации случайного уникального кода
def generate_unique_code(length=8):
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=length))

# Функция для генерации случайной даты в заданном диапазоне
def random_date(start, end):
    delta = end - start
    int_delta = (delta.days * 24 * 60 * 60) + delta.seconds
    random_second = random.randrange(int_delta)
    return start + timedelta(seconds=random_second)

def weighted_choice(elements):
    # Создаем список вероятностей на основе индексов элементов
    total = len(elements)
    probabilities = [i/total for i in range(1, total+1)]
    probabilities = np.array(probabilities) / sum(probabilities)  # Нормализуем вероятности

    return np.random.choice(elements, p=probabilities)

def random_normal_rounded(low, high):
  """
  Генерирует случайное число (или массив чисел) с нормальным распределением,
  ограниченным заданным диапазоном и округленным до 2 знаков после запятой.

  Args:
      low: Нижняя граница диапазона.
      high: Верхняя граница диапазона.

  Returns:
      Случайное число
  """
  
  # Генерируем случайные числа с нормальным распределением
  random_number = np.random.normal(loc=(low + high) / 2, scale=(high - low) / 6)
  
  # Ограничиваем значения диапазоном
  random_number = np.clip(random_number, low, high)
  
  # Округляем до 2 знаков после запятой
  random_number = np.round(random_number, 2)
  
  return random_number

# Открываем файл для записи
with open('customer_purchases.csv', mode='w', newline='') as file:
    writer = csv.writer(file)

    # Записываем заголовки столбцов
    writer.writerow(['ID записи', 'Имя', 'Фамилия', 'Пол', 'Возраст', 'Дата операции', 'Сумма', 'Код транзакции', 'Вид покупки', 'Город', 'Категория клиента'])

    # Генерируем 1000 записей
    for i in range(1000):
        record_id = i + 1
        gender = weighted_choice(genders)
        if gender =='М':
            first_name = weighted_choice(male_first_names)
            last_name = weighted_choice(male_last_names)
        else:
            first_name = weighted_choice(female_first_names)
            last_name = weighted_choice(female_last_names)
        age = random.randint(18, 75)
        transaction_date = random_date(datetime(2022, 1, 1), datetime(2024, 5, 1))
        amount = random_normal_rounded(10, 12000)
        transaction_code = generate_unique_code()
        purchase_type = weighted_choice(purchase_types)
        city = weighted_choice(cities)
        client_category = np.random.choice(['Премиум', 'Стандарт'], p=[0.03, 0.97])

        writer.writerow([record_id, first_name, last_name, gender, age, transaction_date, amount, transaction_code, purchase_type, city, client_category])

print("Датасет успешно сгенерирован в файле 'customer_purchases.csv'")
